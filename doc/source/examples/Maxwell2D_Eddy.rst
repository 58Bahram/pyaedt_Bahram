
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\Maxwell2D_Eddy.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Maxwell2D_Eddy.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Maxwell2D_Eddy.py:


Maxwell 2D  Coil Analysis
--------------------------------------------
This tutorial shows how you can use PyAedt to create a project in
in Maxwell2D and run a simulation

.. GENERATED FROM PYTHON SOURCE LINES 8-38

.. code-block:: default


    import sys
    import os
    import pathlib
    import shutil
    import time
    import numpy as np
    import matplotlib.pyplot as plt

    local_path = os.path.abspath('')
    module_path = pathlib.Path(local_path)
    root_path = module_path.parent.parent
    root_path2 = root_path.parent
    sys.path.append(os.path.join(root_path))
    sys.path.append(os.path.join(root_path2))

    from pyaedt import Desktop
    from pyaedt import Maxwell3d
    from pyaedt import generate_unique_name

    project_dir = os.path.join(os.environ["TEMP"], generate_unique_name("Example"))
    if not os.path.exists(project_dir): os.makedirs(project_dir)
    print(project_dir)


    if not "oDesk" in dir():
        oDesk = Desktop(specified_version="2021.1", NG=True)
    project_name = 'test'
    project_name = os.path.join(project_dir, project_name + '.aedt')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\Users\mcapodif\AppData\Local\Temp\Example_PKOO8G
    Info: Using Windows TaskManager to Load processes
    Info: Ansoft.ElectronicsDesktop.2021.1 Started with Process ID 27976
    Info: pyaedt v0.5.0 started
    Info: Started external COM connection with module pythonnet_v3
    Info: Python version 3.8.5 (default, Sep  3 2020, 21:29:08) [MSC v.1916 64 bit (AMD64)]
    Info: Exe path: C:\Anaconda3\python.exe




.. GENERATED FROM PYTHON SOURCE LINES 39-40

2. Insert a Maxwell design and instantiate Geometry modeler.

.. GENERATED FROM PYTHON SOURCE LINES 40-47

.. code-block:: default



    M3D = Maxwell3d(solution_type="EddyCurrent")
    GEO = M3D.modeler
    GEO.model_units = "mm"
    CS = GEO.coordinate_system





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Warning: No design present - inserting a new design
    Info: Added design 'Maxwell 3D_4KY' of type Maxwell 3D
    Info: Design Loaded
    Info: Successfully loaded project materials !
    Info: Materials Loaded




.. GENERATED FROM PYTHON SOURCE LINES 48-49

3. Create the Model

.. GENERATED FROM PYTHON SOURCE LINES 49-61

.. code-block:: default


    plate = GEO.primitives.create_box([0, 0, 0], [294, 294, 19], name="Plate", matname="aluminum")
    hole = GEO.primitives.create_box([18, 18, 0], [108, 108, 19], name="Hole")


    GEO.subtract([plate], [hole])
    M3D.assignmaterial(plate, "aluminum")
    M3D.solve_inside("Plate")
    adaptive_frequency = "200Hz"
    p_plate = M3D.post.volumetric_loss("Plate")  # Create fields postprocessing variable for loss in object Plate
    M3D.save_project(project_name)  # unable to save file by passing the file name or directory as an argument.





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Info: Assign Material aluminum to object Plate
    Info: Saving Project148 Project

    True



.. GENERATED FROM PYTHON SOURCE LINES 62-63

Create coil

.. GENERATED FROM PYTHON SOURCE LINES 63-73

.. code-block:: default


    center_hole = M3D.modeler.Position(119, 25, 49)
    center_coil = M3D.modeler.Position(94, 0, 49)
    coil_hole = GEO.primitives.create_box(center_hole, [150, 150, 100], name="Coil_Hole")  # All positions in model units
    coil = GEO.primitives.create_box(center_coil, [200, 200, 100], name="Coil")  # All positions in model units
    GEO.subtract([coil], [coil_hole])
    M3D.assignmaterial(coil, "copper")
    M3D.solve_inside("Coil")
    p_coil = M3D.post.volumetric_loss("Coil")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Info: Assign Material copper to object Coil




.. GENERATED FROM PYTHON SOURCE LINES 74-75

Create relative coordinate system

.. GENERATED FROM PYTHON SOURCE LINES 75-78

.. code-block:: default


    CS.create([200, 100, 0], view="XY", name="Coil_CS")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <pyaedt.modeler.Modeler.CoordinateSystem object at 0x0000021D80054280>



.. GENERATED FROM PYTHON SOURCE LINES 79-80

Create coil terminal

.. GENERATED FROM PYTHON SOURCE LINES 80-86

.. code-block:: default


    GEO.section(["Coil"], M3D.CoordinateSystemPlane.ZXPlane)
    GEO.separate_bodies(["Coil_Section1"])
    GEO.primitives.delete("Coil_Section1_Separate1")
    M3D.assign_current(["Coil_Section1"], amplitude=2472)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Info: Deleted 1 Objects

    <pyaedt.modules.Boundary.BoundaryObject object at 0x0000021DD7348160>



.. GENERATED FROM PYTHON SOURCE LINES 87-88

draw region

.. GENERATED FROM PYTHON SOURCE LINES 88-90

.. code-block:: default


    M3D.modeler.create_air_region(*[300] * 6)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    254



.. GENERATED FROM PYTHON SOURCE LINES 91-92

set eddy effects

.. GENERATED FROM PYTHON SOURCE LINES 92-109

.. code-block:: default


    M3D.eddy_effects_on(['Plate'])
    Setup = M3D.create_setup()
    Setup.props["MaximumPasses"] = 12
    Setup.props["MinimumPasses"] = 2
    Setup.props["MinimumConvergedPasses"] = 1
    Setup.props["PercentRefinement"] = 30
    Setup.props["Frequency"] = adaptive_frequency
    Setup.props["HasSweepSetup"] = True
    Setup.props["StartValue"] = "1e-08GHz"
    Setup.props["StopValue"] = "1e-06GHz"
    Setup.props["StepSize"] = "2e-08GHz"

    Setup.update()
    Setup.enable_expression_cache([p_plate, p_coil], "Fields", "Phase=\'0deg\' ", True)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 110-111

4. Solve

.. GENERATED FROM PYTHON SOURCE LINES 111-125

.. code-block:: default




    M3D.analyse_nominal()



    val = M3D.post.get_report_data(expression="SolidLoss")



    M3D.post.report_types






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['EddyCurrent', 'Fields']



.. GENERATED FROM PYTHON SOURCE LINES 126-127

Plot Results

.. GENERATED FROM PYTHON SOURCE LINES 127-137

.. code-block:: default


    fig, ax = plt.subplots(figsize=(20, 10))

    ax.set(xlabel='Frequency (Hz)', ylabel='Solid Losses (W)', title='Losses Chart')
    ax.grid()
    mag_data = np.array(val.data_magnitude())
    freq_data = np.array([i * 1e9 for i in val.sweeps["Freq"]])
    ax.plot(freq_data, mag_data)
    plt.show()




.. image:: /examples/images/sphx_glr_Maxwell2D_Eddy_001.png
    :alt: Losses Chart
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 138-141

5.Savethe project and release the desktop object
Save the project and close it.
oDesk.release_desktop(close_projects=True)  # doesn't work from Jupyter

.. GENERATED FROM PYTHON SOURCE LINES 141-147

.. code-block:: default


    M3D.save_project(project_name)
    oDesk.force_close_desktop()  # Use this from Jupyter







.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Info: Saving test Project





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  9.277 seconds)


.. _sphx_glr_download_examples_Maxwell2D_Eddy.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Maxwell2D_Eddy.py <Maxwell2D_Eddy.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Maxwell2D_Eddy.ipynb <Maxwell2D_Eddy.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
